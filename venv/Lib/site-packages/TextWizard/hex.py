import binascii


def unhexlify(hex_str):
    """16进制转字符串

    Args:
        hex_str (TYPE): 16进制字符串

    Returns:
        TYPE: str
    """
    return binascii.unhexlify(hex_str).decode(errors='ignore')


def hexlify(acsii_str, flag=False):
    """字符串转16进制

    Args:
        acsii_str (TYPE): 字符串
        flag (bool, optional): 是否大写

    Returns:
        TYPE: str
    """
    hex_str = binascii.hexlify(acsii_str.encode())
    if flag:
        return hex_str.upper().decode(errors='ignore')
    return hex_str.decode(errors='ignore')


if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('-b', help='ascii -> 16进制')
    parser.add_argument('-a', help='16进制 -> ascii')
    parser.add_argument('-f', '--flag', default=True, action='store_true', help='大写')

    args = parser.parse_args()
    try:
        if args.a:
            print(unhexlify(args.a))
        elif args.b:
            print(hexlify(args.b, args.flag))
    except Exception as e:
        print(e)
